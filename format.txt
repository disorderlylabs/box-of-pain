# this file describes the serialization format for boprun files. It's not a good format, it's just
# what worked when writing the code. Sorry in advance.
#
# the format contains enough information to construct the in-memory representation of an execution.
# This includes: an array of syscalls in observation order, a per-thread array of events in per-thread
# observation order, an array of sockets, an array of connections, an array of processes, and an array
# of threads.

# Each of these types has an internal id which is also an index into the respective array. The types
# also refer to each other (eg a process contains a list of threads, and each thread a pointer to its
# process). Connections have two sockets, and a socket has (optionally) a connection. Threads contain
# a list of events, and an event points to a syscall. A syscall is pointed to by 2 events (entry and
# exit). An event has, optionally, additional parents. By default, an event's parent is always the
# event preceding it in the per-thread event list. However, it may have additional events that BOP
# decides are its parents in the happens-before order that it calculates.

# Below is a representation of the format. The first word is literal; the file will contain it to
# tell you what the line means. Spaces indicate that the line is a "child" line of the previous
# (allowing some additional processing). Everything else is interpreted as a number (with the
# exception of the invocation info at the end of a PROCESS line.

# Comments below start with #. ? denotes boolean.

PROCESS internal-id process-id exit-code did-exit? number-of-threads command-line
   thread thread-internal-id

THREAD internal-id thread-id process-internal-id number-of-events

EVENT internal-per-thread-id thread-internal-id syscall-internal-id was-syscall-entry? additional-parent-count
    event parent-per-thread-event-id parent-thread-internal-id


# Note: for syscalls, issuing IDs are system IDs (PID) not internal IDs!
SYSCALL internal-uuid issuing-thread-tid issuing-process-pid local-id syscall-number arg0 arg1 arg2 arg3 arg4 arg5 ret-value was-successful?
   sockop socket-internal-id # present for all syscalls which have a socket fd
   serversock socket-internal-id # present for accept syscalls (refers to server socket that was passed to accept.


SOCK internal-id flags file-descriptor owner(internal-proc-id) creator(internal-thread-id)
   addr socket-address-type (socket-type-size)port-number:address # specifies this sockets bound address (if bound)
   peer socket-address-type (socket-type-size)port-number:address # specifies this sockets peer (if it has a peer)
   


CONN internal-id connector-socket-id acceptor-socket-id connect-syscall-id accept-syscall-id



